"use strict";const allFeeds=[{name:"Udacity Blog",url:"http://blog.udacity.com/feed"},{name:"CSS Tricks",url:"http://feeds.feedburner.com/CssTricks"},{name:"HTML5 Rocks",url:"http://feeds.feedburner.com/html5rocks"},{name:"Linear Digressions",url:"http://feeds.feedburner.com/udacity-linear-digressions"}];function init(){loadFeed(0)}function loadFeed(e,t){let n=allFeeds[e].url,l=allFeeds[e].name;$.ajax({type:"POST",url:"https://rsstojson.udacity.com/parseFeed",data:JSON.stringify({url:n}),contentType:"application/json",success:function(e,n){let d=$(".feed"),i=$(".header-title"),a=e.feed.entries,o=(a.length,Handlebars.compile($(".tpl-entry").html()));i.html(l),d.empty(),a.forEach(function(e){d.append(o(e))}),t&&t()},error:function(e,n,l){t&&t()},dataType:"json"})}google.setOnLoadCallback(init),$(function(){$(".feed");let e=$(".feed-list"),t=Handlebars.compile($(".tpl-feed-list-item").html()),n=0,l=$(".menu-icon-link");allFeeds.forEach(function(l){l.id=n,e.append(t(l)),n++}),e.on("click","a",function(){let e=$(this);return $("body").addClass("menu-hidden"),loadFeed(e.data("id")),!1}),l.on("click",function(){$("body").toggleClass("menu-hidden")})}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,
